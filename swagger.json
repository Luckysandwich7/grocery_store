{
  "swagger": "2.0",
  "info": {
    "title": "Grocery Store API",
    "description": "Grocery Store API",
    "version": "1.0.0"
  },
  "host": "cte341-final-project.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "Employees",
      "description": "Add or make edits to the Employee Collection in the Grocery Store Database"
    },
    {
      "name": "Bakery",
      "description": "Add or make edits to the Bakery Items in the Grocery Store Database"
    },
    {
      "name": "Deli",
      "description": "Add or make edits to the Deli Items in the Grocery Store Database"
    },
    {
      "name": "Produce",
      "description": "Add or make edits to the Bakery Items in the Grocery Store Database"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/login": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/logout": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/api-docs": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/bakery/": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "example": "any"
                },
                "productName": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "allergens": {
                  "example": "any"
                },
                "servings": {
                  "example": "any"
                },
                "count": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/bakery/{id}": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "example": "any"
                },
                "productName": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "allergens": {
                  "example": "any"
                },
                "servings": {
                  "example": "any"
                },
                "count": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employees/": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get full employee list",
        "description": "To get all Employee, Create multiple Employees",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Employee"
        ],
        "summary": "Create new Employee",
        "description": "Adds a new Employee to the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "personalEmail": {
                  "example": "any"
                },
                "jobTitle": {
                  "example": "any"
                },
                "workEmail": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/employees/{id}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "summary": "Get employee by Id",
        "description": "To get an Employee by Id, Create an Employee",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "tags": [
          "Employee"
        ],
        "summary": "Update employee by Id",
        "description": "To update an Employee by Id, create an Employee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "personalEmail": {
                  "example": "any"
                },
                "jobTitle": {
                  "example": "any"
                },
                "workEmail": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Employee"
        ],
        "summary": "Deletes employee by Id",
        "description": "To delete an Employee by Id, create an Employee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/deli/": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "example": "any"
                },
                "productName": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "calories": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                },
                "count": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/deli/{id}": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "example": "any"
                },
                "productName": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "calories": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                },
                "count": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/produce/": {
      "get": {
        "tags": [
          "Produce"
        ],
        "summary": "Get full Produce list",
        "description": "Get all Produce from the Produce Collection, Creates multiple Produce",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Produce"
        ],
        "summary": "Create a new Produce item",
        "description": "Create a new Produce item from the Produce Collection",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "department": {
                  "example": "any"
                },
                "type": {
                  "example": "any"
                },
                "color": {
                  "example": "any"
                },
                "quality": {
                  "example": "any"
                },
                "peakSeason": {
                  "example": "any"
                },
                "amountInStock": {
                  "example": "any"
                },
                "unit": {
                  "example": "any"
                },
                "productName": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/produce/{id}": {
      "get": {
        "tags": [
          "Produce"
        ],
        "summary": "Get Single Produce list",
        "description": "Get a Single Produce from the Produce Collection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Produce"
        ],
        "summary": "Modify a Produce item",
        "description": "Modify a Produce item from the Produce Collection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "department": {
                  "example": "any"
                },
                "type": {
                  "example": "any"
                },
                "color": {
                  "example": "any"
                },
                "quality": {
                  "example": "any"
                },
                "peakSeason": {
                  "example": "any"
                },
                "amountInStock": {
                  "example": "any"
                },
                "unit": {
                  "example": "any"
                },
                "productName": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Produce"
        ],
        "summary": "Delete a Produce item",
        "description": "Delete a Produce item from the Produce Collection",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}